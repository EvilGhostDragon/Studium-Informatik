1)
C Source Code wird vom Menschen geschrieben und ist daher auch für den Menschen verständlich und lesbar jedoch nicht für den Computer.
Executable sind ausführbare Programme -> Compilierter Souce Code -> dieser ist nicht mehr für den Menschen verständlich, jedoch für den Computer.

2)
Vorgang von c Source Code zum Executable:

Source Code \
            Pre Processor
            /           |
Pre-precessed Code      |
            \          /
            Compiler
            /          \
Assambly Code           |
            \          /
            Assembler
            /          \
Machine Code            |
(ohne librarys verlinkt)|
            \          /
            Linker
            /
Executable


gcc Compiliert nicht nur sonder vollführt all die gannnten Schritte
Notwendig: Source Code kann ist nicht verständlich für den Computer
            zB. printf:
                  Source Code: Funktionsaufruf der Library "stdio"
                  Executable: Anweisung Variable vom Speicher zu laden und am Bildschirm auszugeben
           -> übersetzten von Menschlicher Sprache in Computer Sprache (Machinecode)

3)
Anzeige aller Warnungen. Manche Warnungen von gcc werden standardmäßig nicht ausgegeben

4)
1   #include <stdio.h>      //Inkludierung der "stdio" Library -> Wird für den Funktionsaufruf "prinf" benötigt.
3   int main() {            //Begin der Hauptfunktion - input: void / output: int
4   char sAdd[8] = "World"; //Deklaration der Variable sAdd als Charset mit der Größe 8 + Zuweisung des Strings "World"
5   printf("Hello\n%s\n", sAdd);  // Aufruf der Funtion "prinf" (Input: "Hello" + sAdd /output: void) - \n Anweisung fürs Terminal: in neue Zeile springen - %s Einbindung der Strings sAdd
6   return 0;}               //Programm wurde erfolgreich Durchgeführt und beendet

5)
./a2
